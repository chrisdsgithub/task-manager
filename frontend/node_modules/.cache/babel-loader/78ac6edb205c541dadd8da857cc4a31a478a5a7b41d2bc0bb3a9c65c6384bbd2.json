{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tilak\\\\OneDrive\\\\Desktop\\\\task_managerv2\\\\frontend\\\\src\\\\components\\\\TaskItem.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskItem({\n  task,\n  onUpdate,\n  onDelete\n}) {\n  const handleToggleComplete = () => {\n    onUpdate(task.id, {\n      completed: !task.completed\n    });\n  };\n  const handleDelete = () => {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      onDelete(task.id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task-item ${task.completed ? 'completed' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Created: \", new Date(task.created_at).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggleComplete,\n        className: task.completed ? 'btn-complete' : 'btn-incomplete',\n        children: task.completed ? 'Mark Incomplete' : 'Mark Complete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        className: \"btn-delete\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TaskItem","task","onUpdate","onDelete","handleToggleComplete","id","completed","handleDelete","window","confirm","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","Date","created_at","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tilak/OneDrive/Desktop/task_managerv2/frontend/src/components/TaskItem.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction TaskItem({ task, onUpdate, onDelete }) {\r\n  const handleToggleComplete = () => {\r\n    onUpdate(task.id, { completed: !task.completed });\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (window.confirm('Are you sure you want to delete this task?')) {\r\n      onDelete(task.id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`task-item ${task.completed ? 'completed' : ''}`}>\r\n      <div className=\"task-content\">\r\n        <h3>{task.title}</h3>\r\n        {task.description && <p>{task.description}</p>}\r\n        <small>Created: {new Date(task.created_at).toLocaleDateString()}</small>\r\n      </div>\r\n      <div className=\"task-actions\">\r\n        <button \r\n          onClick={handleToggleComplete}\r\n          className={task.completed ? 'btn-complete' : 'btn-incomplete'}\r\n        >\r\n          {task.completed ? 'Mark Incomplete' : 'Mark Complete'}\r\n        </button>\r\n        <button onClick={handleDelete} className=\"btn-delete\">\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskItem;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAS,CAAC,EAAE;EAC9C,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjCF,QAAQ,CAACD,IAAI,CAACI,EAAE,EAAE;MAAEC,SAAS,EAAE,CAACL,IAAI,CAACK;IAAU,CAAC,CAAC;EACnD,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC,EAAE;MAChEN,QAAQ,CAACF,IAAI,CAACI,EAAE,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKW,SAAS,EAAE,aAAaT,IAAI,CAACK,SAAS,GAAG,WAAW,GAAG,EAAE,EAAG;IAAAK,QAAA,gBAC/DZ,OAAA;MAAKW,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BZ,OAAA;QAAAY,QAAA,EAAKV,IAAI,CAACW;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EACpBf,IAAI,CAACgB,WAAW,iBAAIlB,OAAA;QAAAY,QAAA,EAAIV,IAAI,CAACgB;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9CjB,OAAA;QAAAY,QAAA,GAAO,WAAS,EAAC,IAAIO,IAAI,CAACjB,IAAI,CAACkB,UAAU,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eACNjB,OAAA;MAAKW,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BZ,OAAA;QACEsB,OAAO,EAAEjB,oBAAqB;QAC9BM,SAAS,EAAET,IAAI,CAACK,SAAS,GAAG,cAAc,GAAG,gBAAiB;QAAAK,QAAA,EAE7DV,IAAI,CAACK,SAAS,GAAG,iBAAiB,GAAG;MAAe;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACTjB,OAAA;QAAQsB,OAAO,EAAEd,YAAa;QAACG,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAEtD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACM,EAAA,GA/BQtB,QAAQ;AAiCjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}