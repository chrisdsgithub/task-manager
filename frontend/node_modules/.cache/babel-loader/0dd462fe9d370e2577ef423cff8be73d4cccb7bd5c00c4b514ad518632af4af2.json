{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tilak\\\\OneDrive\\\\Desktop\\\\task_managerv2\\\\frontend\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Configure axios to include credentials\naxios.defaults.withCredentials = true;\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const API_BASE_URL = 'http://localhost:5000/api';\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/auth/check`);\n      if (response.data.authenticated) {\n        setUser(response.data.user);\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\n        username,\n        password\n      });\n      setUser(response.data.user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\n      setUser(response.data.user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed'\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await axios.post(`${API_BASE_URL}/auth/logout`);\n      setUser(null);\n    } catch (error) {\n      console.error('Logout failed:', error);\n      setUser(null); // Clear user anyway\n    }\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","defaults","withCredentials","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","API_BASE_URL","checkAuthStatus","response","get","data","authenticated","error","console","login","username","password","post","success","_error$response","_error$response$data","register","userData","_error$response2","_error$response2$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tilak/OneDrive/Desktop/task_managerv2/frontend/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\n// Configure axios to include credentials\r\naxios.defaults.withCredentials = true;\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const API_BASE_URL = 'http://localhost:5000/api';\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/auth/check`);\r\n      if (response.data.authenticated) {\r\n        setUser(response.data.user);\r\n      }\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\r\n        username,\r\n        password\r\n      });\r\n      setUser(response.data.user);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.error || 'Login failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\r\n      setUser(response.data.user);\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.error || 'Registration failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/auth/logout`);\r\n      setUser(null);\r\n    } catch (error) {\r\n      console.error('Logout failed:', error);\r\n      setUser(null); // Clear user anyway\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}